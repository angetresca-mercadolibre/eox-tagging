# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#

version: 2
workflows:
  version: 2
  test:
    jobs:
      - test-3.5
      - test-2.7
jobs:
  test-3.5:
    docker:
      # specify the version you desire here
      - image: circleci/python:3.5
    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - test-35-{{ checksum "requirements/test.txt" }}
          # fallback to using the latest cache if no exact match is found
          - test-35-

      - run:
          name: activate virtualenv and install dependencies.
          command: |
            test -d venv || virtualenv -p python3 ./venv
            . venv/bin/activate
            make test_requirements

      - save_cache:
          paths:
            - ./venv
          key: test-35-{{ checksum "requirements/test.txt" }}

      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            coverage run --source="." manage.py test
            coverage report --fail-under=71 -m
            pycodestyle ./eox_tagging
            pylint ./eox_tagging --rcfile=./setup.cfg
            isort --check-only --recursive --diff ./eox_tagging

  # Based on answer https://discuss.circleci.com/t/run-tests-on-multiple-versions-of-python/15462
  test-2.7:
    docker:
      - image: circleci/python:2.7
    working_directory: ~/repo27

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - test-27-{{ checksum "requirements/test.txt" }}
          # fallback to using the latest cache if no exact match is found
          - test-27-

      - run:
          name: activate virtualenv and install dependencies.
          command: |
            test -d venv || virtualenv ./venv
            . venv/bin/activate
            make test_requirements

      - save_cache:
          paths:
            - ./venv
          key: test-27-{{ checksum "requirements/test.txt" }}

      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            coverage run --source="." --rcfile=.coveragerc manage.py test
            coverage report --fail-under=71 --rcfile=.coveragerc -m
            pycodestyle ./eox_tagging
            pylint ./eox_tagging --rcfile=./setup.cfg
            isort --check-only --recursive --diff ./eox_tagging
